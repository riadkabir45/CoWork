name: Test, Build and Push JAR to Production Branch

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: "postgres.ubkhyjduerbjudoirhcx"
          POSTGRES_PASSWORD: "#%xa&LecdTkFQ5s"
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Test and Build with Maven
        run: ./mvnw clean verify package

      - name: Save Dockerfile and Jar to TMP
        run: |
          cp Dockerfile /tmp/Dockerfile
          cp target/app.jar /tmp/app.jar

      - name: Prepare production branch
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch origin production || true
          git checkout -B production origin/production || git checkout --orphan production
          git rm -rf . || true

      - name: Restore Dockerfile and JAR
        run: |
          cp /tmp/Dockerfile Dockerfile
          cp /tmp/app.jar app.jar

      - name: Commit and push to production branch
        run: |
          git add app.jar Dockerfile
          git commit -m "Deploy built JAR to production branch [skip ci]" || echo "No changes to commit"
          git push origin production --force
